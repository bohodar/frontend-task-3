{"version":3,"sources":["Redux/Reducers/postsReducer.js","Redux/storage.js","AppStyles.js","Components/Postlist.js","Components/Post.js","Components/PostPage.js","ApiHelper/loadPosts.js","App.js","index.js"],"names":["ADD_COMMENT","addComment","text","postID","type","id","reducer","combineReducers","posts","state","arguments","length","undefined","action","console","log","copy","Object","toConsumableArray","map","post","copyPost","objectSpread","copyCommets","comments","push","store","createStore","GlobalStyle","createGlobalStyle","_templateObject","Wrapper","styled","section","_templateObject2","ListOuterWrapper","div","_templateObject3","PostsWrapper","ul","_templateObject4","ListItemWrapper","_templateObject5","CurrentPostOuter","_templateObject6","CurrentPostInner","_templateObject7","BackButton","button","_templateObject8","PostWrap","_templateObject9","generatePosts","react_default","a","createElement","key","react_router_dom","to","concat","email","name","connect","_ref","mapDispatch","_useState","useState","_useState2","slicedToArray","userText","changeUserText","handleInput","e","target","value","onSubmit","preventDefault","body","item","placeholder","onChange","PostPage","match","params","postId","replace","Components_Post","loadPosts","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetch","then","response","json","catch","error","abrupt","sent","stop","apply","this","App","setPosts","props","Fragment","react_router","exact","path","component","Postlist","React","Component","ReactDOM","render","es","basename","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fc019eee.chunk.js","sourcesContent":["const SET_POSTS = 'SET_POSTS';\r\nconst ADD_COMMENT = 'ADD_COMMENT';\r\n\r\nexport const setPosts = (posts) => {\r\n  return {\r\n    type: SET_POSTS,\r\n    posts: posts\r\n  }\r\n};\r\n\r\nexport default function addComment(text, postID) {\r\n  return {\r\n    type: ADD_COMMENT,\r\n    text: text,\r\n    id: postID\r\n  }\r\n};\r\n\r\nexport const setPostsReducer = (state = [], action) => {\r\n  console.log(action.type);\r\n  switch (action.type) {\r\n    case SET_POSTS:\r\n      return action.posts;\r\n\r\n    case ADD_COMMENT:\r\n      const copy = [...state];\r\n      copy.map(post => {\r\n\r\n        if (post.id === action.id) {\r\n          const copyPost = {...post};\r\n\r\n          if (copyPost['comments']) {\r\n            const copyCommets = [...copyPost.comments].push(action.text);\r\n            return {\r\n              ...copyPost,\r\n              comments: copyCommets\r\n            }\r\n          } else {\r\n            return {\r\n              ...copyPost,\r\n              comments: [action.text]\r\n            }\r\n          }\r\n        }\r\n        return post;\r\n      });\r\n      return copy;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { setPostsReducer } from './Reducers/postsReducer'\r\n\r\nconst reducer = combineReducers({\r\n  posts: setPostsReducer,\r\n});\r\n\r\nexport const store = createStore(reducer);\r\n","import styled, {createGlobalStyle} from 'styled-components';\r\n\r\nexport const GlobalStyle  = createGlobalStyle`\r\n  body {\r\n    margin: -20px 0;\r\n    background-color: #c4c4c4;\r\n    display: flex;\r\n    justify-content: center\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.section`\r\n  position: relative;\r\n  width: 75vw;\r\n  min-width: 500px;\r\n  \r\n  margin: 50px 0;\r\n  padding: 10px 0;\r\n  \r\n  background-color: white;\r\n  box-shadow: 0 0 22px #555;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport const ListOuterWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 10px;\r\n`;\r\n\r\nexport const PostsWrapper = styled.ul`\r\n  padding-left: 0;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const ListItemWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  \r\n  width: 290px;\r\n  \r\n  margin: 10px 30px;\r\n  padding: 30px 20px;\r\n  \r\n  border: 1px solid black;\r\n  border-left: 5px solid cyan;\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 14px #999;\r\n  \r\n  transition: .2s ease-in-out;\r\n  \r\n  text-align: center;  \r\n  cursor: pointer;\r\n  \r\n  &:hover {\r\n    transform: scale(1.04);\r\n    border-left: 6px solid tomato ;\r\n  }\r\n  \r\n  a {\r\n    width: 100%;\r\n    text-decoration: none;\r\n    transition: .3s ease-in;\r\n  }\r\n`;\r\n\r\nexport const CurrentPostOuter = styled.div`\r\n  position: relative;\r\n  width: 80%;\r\n  \r\n  margin: 10px auto;\r\n  padding: 20px 30px;\r\n  \r\n  border: 1px solid black;\r\n  border-left: 5px solid #5997ac;\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 14px #999;\r\n  \r\n  background-color: white;\r\n`;\r\n\r\nexport const CurrentPostInner = styled.div`\r\n  position: relative;\r\n  margin: 20px 10px;\r\n`;\r\nexport const BackButton = styled.button`\r\n  position: relative;\r\n  \r\n  width: 120px;\r\n  left: calc(50% - 55px);\r\n  margin-top: 20px;\r\n  padding: 6px 10px;\r\n  \r\n  border: 1px solid #333;\r\n  border-radius: 8px;\r\n  background-color: white;\r\n  \r\n  transition: .15s ease-in;\r\n  \r\n  a {\r\n    color: #5997ac;\r\n    font-weight: 600;\r\n    text-decoration: none;\r\n  }\r\n  \r\n  &:hover {\r\n    background-color: #5997ac;\r\n    \r\n    a {\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PostWrap = styled.div`\r\n  input {\r\n    height: 2em;\r\n    width: 90%;\r\n  }\r\n`;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link} from 'react-router-dom';\r\nimport { ListOuterWrapper, PostsWrapper, ListItemWrapper } from '../AppStyles'\r\n\r\nconst Postlist = ({ posts }) => {\r\n  return (\r\n    <ListOuterWrapper>\r\n      <h2>Postspage</h2>\r\n      {posts.length > 0 ?\r\n        <PostsWrapper>{generatePosts(posts)}</PostsWrapper> :\r\n        <div>Loading posts ...</div>}\r\n    </ListOuterWrapper>\r\n  )\r\n};\r\n\r\nconst generatePosts = (posts) => {\r\n  return posts.map(post => (\r\n    <ListItemWrapper key={post.id}>\r\n      <Link to={`/posts/post:${post.id}`}>\r\n          <b>{post.email}</b><br/>\r\n          <code>{post.name}</code>\r\n      </Link>\r\n    </ListItemWrapper>\r\n  ))\r\n};\r\n\r\nconst mapState = (state) => {\r\n  return {\r\n    posts: state.posts\r\n  }\r\n};\r\nexport default connect(mapState)(Postlist);\r\n","import React, { useState } from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport addComment from '../Redux/Reducers/postsReducer'\r\nimport { PostWrap } from \"../AppStyles\";\r\n\r\nfunction Post({ posts, id}) {\r\n  const [userText, changeUserText] = useState('');\r\n\r\n  function handleInput(e){\r\n    changeUserText(e.target.value);\r\n  }\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n    addComment(userText, id);\r\n    changeUserText('');\r\n  }\r\n  function generateComments(comments){\r\n    return comments.map(item => (<p>{item}</p>))\r\n  }\r\n\r\n  return posts.map(post => {\r\n    if (post.id !== id) return null;\r\n    return (\r\n      <PostWrap key={post.id}>\r\n        <h3>{post.email}</h3>\r\n        <p>{post.body}</p>\r\n        {post['comments'] ?\r\n          generateComments(post.comments) :\r\n          null\r\n        }\r\n        <form onSubmit={onSubmit}>\r\n          <input\r\n            value={userText}\r\n            placeholder=\"Add a comment\"\r\n            onChange={handleInput}\r\n          />\r\n        </form>\r\n      </PostWrap>\r\n    )\r\n  })\r\n}\r\n\r\nconst mapState = (state) => {\r\n  return {\r\n    posts: state.posts\r\n  }\r\n};\r\n\r\nconst mapDispatch = { addComment };\r\n\r\nexport default connect(mapState, mapDispatch)(Post);\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport Post from './Post'\r\nimport { CurrentPostOuter, CurrentPostInner, BackButton } from \"../AppStyles\";\r\n\r\nexport const PostPage = ({ match }) => {\r\n  const id = match.params.postId.replace(/[^-0-9]/gim,'');\r\n  return (\r\n    <CurrentPostOuter>\r\n      <CurrentPostInner>\r\n        <h2>Post #{id}:</h2>\r\n        <Post id={+id}/>\r\n        <BackButton>\r\n          <Link to=\"/\">Back to home</Link>\r\n        </BackButton>\r\n      </CurrentPostInner>\r\n    </CurrentPostOuter>\r\n  )\r\n};\r\n","const BASE_URL = \"https://jsonplaceholder.typicode.com/comments\";\r\n\r\nexport const loadPosts = async () => {\r\n  return await fetch(BASE_URL)\r\n    .then(response => response.json())\r\n    .catch(error => console.error('Oh no! Something went wrong: ' + error))\r\n};\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Postlist from './Components/Postlist'\nimport { PostPage } from './Components/PostPage'\nimport { loadPosts } from './ApiHelper/loadPosts'\nimport { setPosts } from './Redux/Reducers/postsReducer'\nimport { Wrapper, GlobalStyle } from \"./AppStyles\";\n\nclass App extends React.Component {\n  async componentDidMount() {\n    const { setPosts } = this.props;\n    const posts = await loadPosts();\n    posts.length = 40;\n    setPosts(posts);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <GlobalStyle/>\n          <Wrapper>\n            <Switch>\n              <Route exact path=\"/\" component={Postlist}/>\n              <Route path=\"/posts/post:postId/\" component={PostPage}/>\n            </Switch>\n          </Wrapper>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    posts: state.posts\n  }\n};\n\nconst mapDispatch = { setPosts };\n\nexport default connect(mapState, mapDispatch)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { store } from './Redux/storage'\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename=\"/frontend-task-3\">\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}