{"version":3,"sources":["Redux/storage.js","Redux/Reducers/postsReducer.js","Components/Postlist.js","Components/Post.js","Components/PostPage.js","ApiHelper/loadPosts.js","App.js","index.js"],"names":["reducer","combineReducers","posts","state","arguments","length","undefined","action","type","store","createStore","generatePosts","map","post","react_default","a","createElement","react_router_dom","key","id","to","pathname","concat","postId","name","connect","_ref","body","PostPage","location","Components_Post","loadPosts","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetch","then","response","json","catch","error","console","abrupt","sent","stop","apply","this","App","setPosts","props","className","react_router","exact","path","component","Postlist","React","Component","mapDispatch","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1f137420.chunk.js","sourcesContent":["import { createStore, combineReducers } from 'redux';\r\nimport { setPostsReducer } from './Reducers/postsReducer'\r\n\r\nconst reducer = combineReducers({\r\n  posts: setPostsReducer,\r\n});\r\n\r\nexport const store = createStore(reducer);\r\n","const SET_POSTS = 'SET_POSTS';\r\n\r\nexport const setPosts = (posts) => {\r\n  return {\r\n    type: SET_POSTS,\r\n    posts: posts\r\n  }\r\n};\r\n\r\nexport const setPostsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case SET_POSTS:\r\n      return action.posts;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link} from 'react-router-dom'\r\n\r\nconst Postlist = ({ posts }) => {\r\n  return (\r\n    <div>\r\n      <h3>Postspage</h3>\r\n      {posts.length > 0 ?\r\n        <ul>{generatePosts(posts)}</ul> :\r\n        <div>Loading posts ...</div>}\r\n    </div>\r\n  )\r\n};\r\n\r\nconst generatePosts = (posts) => {\r\n  return posts.map(post => (\r\n    <Link\r\n      key={post.id}\r\n      to={{\r\n        pathname: `/posts/post:${post.id}`,\r\n        postId: post.id,\r\n      }}\r\n    >\r\n      <li>{post.name}</li>\r\n    </Link>\r\n  ))\r\n};\r\n\r\nconst mapState = (state) => {\r\n  return {\r\n    posts: state.posts\r\n  }\r\n};\r\nexport default connect(mapState)(Postlist);\r\n","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Post = ({ posts, id}) => {\r\n  return posts.map(post => {\r\n    if (post.id !== id) return null;\r\n    return (\r\n      <div>\r\n        <h3>{post.name}</h3>\r\n        <p>{post.body}</p>\r\n      </div>\r\n    )\r\n  })\r\n};\r\n\r\nconst mapState = (state) => {\r\n  return {\r\n    posts: state.posts\r\n  }\r\n};\r\n\r\nexport default connect(mapState)(Post);\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport Post from './Post'\r\n\r\nexport const PostPage = ({ location }) => {\r\n  const { postId } = location;\r\n  return (\r\n    <div>\r\n      <h2>Hello! Here's post</h2>\r\n      <Post id={postId}/>\r\n      <Link to=\"/\">Back to home</Link>\r\n    </div>\r\n  )\r\n};\r\n","const BASE_URL = \"https://jsonplaceholder.typicode.com/comments\";\r\n\r\nexport const loadPosts = async () => {\r\n  return await fetch(BASE_URL)\r\n    .then(response => response.json())\r\n    .catch(error => console.error('Oh no! Something went wrong: ' + error))\r\n};\r\n","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Postlist from './Components/Postlist'\nimport { PostPage } from './Components/PostPage'\nimport { loadPosts } from './ApiHelper/loadPosts'\nimport { setPosts } from './Redux/Reducers/postsReducer'\nimport './AppStyles';\n\nclass App extends React.Component {\n  async componentDidMount() {\n    const { setPosts } = this.props;\n    const posts = await loadPosts();\n    setPosts(posts);\n  }\n\n  render() {\n    return (\n      <div className=\"PostApp\">\n        <Switch>\n          <Route exact path=\"/\" component={Postlist}/>\n          <Route path=\"/posts/post:postId/\" component={PostPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    posts: state.posts\n  }\n};\n\nconst mapDispatch = { setPosts };\n\nexport default connect(mapState, mapDispatch)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { store } from './Redux/storage'\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}