{"version":3,"sources":["Redux/storage.js","Redux/Reducers/postsReducer.js","AppStyles.js","Components/Postlist.js","Components/Post.js","helpers/getTime.js","Components/PostPage.js","helpers/loadPosts.js","App.js","index.js"],"names":["reducer","combineReducers","posts","state","arguments","length","undefined","action","type","Object","toConsumableArray","map","post","id","_post$comments","comments","newComment","body","text","time","objectSpread","concat","store","createStore","GlobalStyle","createGlobalStyle","_templateObject","Wrapper","styled","section","_templateObject2","ListOuterWrapper","div","_templateObject3","PostsWrapper","ul","_templateObject4","ListItemWrapper","_templateObject5","CurrentPostOuter","_templateObject6","CurrentPostInner","_templateObject7","BackButton","button","_templateObject8","PostWrap","_templateObject9","CommentWrap","p","_templateObject10","Time","code","_templateObject11","generatePosts","react_default","a","createElement","key","react_router_dom","to","email","name","connect","_ref","randomStr","require","mapDispatch","addComment","postID","_useState","useState","_useState2","slicedToArray","userText","changeUserText","handleInput","e","target","value","onSubmit","preventDefault","Date","DD","getDate","MM","getMonth","getHours","getMinutes","getSeconds","getTime","item","generate","placeholder","onChange","PostPage","match","params","postId","replace","Components_Post","loadPosts","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetch","then","response","json","catch","error","console","abrupt","sent","stop","apply","this","App","setPosts","props","Fragment","react_router","exact","path","component","Postlist","React","Component","ReactDOM","render","es","basename","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6d0d10e1.chunk.js","sourcesContent":["import { createStore, combineReducers } from 'redux';\r\nimport { setPostsReducer } from './Reducers/postsReducer'\r\n\r\nconst reducer = combineReducers({\r\n  posts: setPostsReducer,\r\n});\r\n\r\nexport const store = createStore(reducer);\r\n","const SET_POSTS = 'SET_POSTS';\r\nconst ADD_COMMENT = 'ADD_COMMENT';\r\n\r\nexport const setPosts = (posts) => {\r\n  return {\r\n    type: SET_POSTS,\r\n    posts: posts\r\n  }\r\n};\r\n\r\nexport const addComment = (text, postID, time) => {\r\n  return {\r\n    type: ADD_COMMENT,\r\n    text: text,\r\n    id: postID,\r\n    time: time\r\n  }\r\n};\r\n\r\nexport const setPostsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case SET_POSTS:\r\n      return action.posts;\r\n\r\n    case ADD_COMMENT:\r\n      const copy = [...state];\r\n      return copy.map(post => {\r\n\r\n        if (post.id === action.id) {\r\n          const { comments = [] } = post;\r\n          const newComment = {\r\n            body: action.text,\r\n            time: action.time\r\n          };\r\n\r\n          return {\r\n            ...post,\r\n            comments: [...comments, newComment]\r\n          }\r\n        }\r\n        return post;\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import styled, {createGlobalStyle} from 'styled-components';\r\n\r\nexport const GlobalStyle  = createGlobalStyle`\r\n  body {\r\n    font-family: sans-serif;\r\n  \r\n    margin: -20px 0;\r\n    background-color: #c4c4c4;\r\n    display: flex;\r\n    justify-content: center\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.section`\r\n  position: relative;\r\n  width: 75vw;\r\n  min-width: 500px;\r\n  \r\n  margin: 50px 0;\r\n  padding: 10px 0;\r\n  \r\n  background-color: white;\r\n  box-shadow: 0 0 22px #555;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport const ListOuterWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 10px;\r\n`;\r\n\r\nexport const PostsWrapper = styled.ul`\r\n  padding-left: 0;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const ListItemWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  \r\n  width: 290px;\r\n  \r\n  margin: 10px 30px;\r\n  padding: 30px 20px;\r\n  \r\n  border: 1px solid black;\r\n  border-left: 5px solid cyan;\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 14px #999;\r\n  \r\n  transition: .2s ease-in-out;\r\n  \r\n  text-align: center;  \r\n  cursor: pointer;\r\n  \r\n  &:hover {\r\n    transform: scale(1.04);\r\n    border-left: 6px solid tomato ;\r\n  }\r\n  \r\n  a {\r\n    width: 100%;\r\n    text-decoration: none;\r\n    transition: .3s ease-in;\r\n  }\r\n`;\r\n\r\nexport const CurrentPostOuter = styled.div`\r\n  position: relative;\r\n  width: 80%;\r\n  \r\n  margin: 10px auto;\r\n  padding: 20px 30px;\r\n  \r\n  border: 1px solid black;\r\n  border-left: 5px solid #5997ac;\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 14px #999;\r\n  \r\n  background-color: white;\r\n`;\r\n\r\nexport const CurrentPostInner = styled.div`\r\n  position: relative;\r\n  margin: 20px 10px;\r\n`;\r\nexport const BackButton = styled.button`\r\n  position: relative;\r\n  \r\n  width: 120px;\r\n  left: calc(50% - 55px);\r\n  margin-top: 20px;\r\n  padding: 6px 10px;\r\n  \r\n  border: 1px solid #333;\r\n  border-radius: 8px;\r\n  background-color: white;\r\n  \r\n  transition: .15s ease-in;\r\n  \r\n  a {\r\n    color: #5997ac;\r\n    font-weight: 600;\r\n    text-decoration: none;\r\n  }\r\n  \r\n  &:hover {\r\n    background-color: #5997ac;\r\n    \r\n    a {\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PostWrap = styled.div`\r\n  input {\r\n    height: 2em;\r\n    width: 100%;\r\n  }\r\n  \r\n  q {\r\n    display: inline-block;\r\n    margin: 0 0 20px;\r\n    padding-left: 12px;\r\n    font-size: 1.1em;\r\n    font-weight: 100;\r\n  }\r\n`;\r\n\r\nexport const CommentWrap = styled.p`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  \r\n  margin: 12px 30px;\r\n  padding: 16px 12px;\r\n  \r\n  background-color: #d4d4d9;\r\n  border-radius: 8px;\r\n  \r\n  b {\r\n    font-size: .8em;\r\n  }\r\n`;\r\nexport const Time = styled.code`\r\n  display: inline-block;\r\n  \r\n  position: absolute;\r\n  right: 10px;\r\n  bottom: 4px;\r\n  font-size: 11px;\r\n  \r\n  color: rgba(0, 0, 0, .7)\r\n`;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link} from 'react-router-dom';\r\nimport { ListOuterWrapper, PostsWrapper, ListItemWrapper } from '../AppStyles'\r\n\r\nconst Postlist = ({ posts }) => {\r\n  return (\r\n    <ListOuterWrapper>\r\n      <h2>Postspage</h2>\r\n      {posts.length > 0 ?\r\n        <PostsWrapper>{generatePosts(posts)}</PostsWrapper> :\r\n        <div>Loading posts ...</div>}\r\n    </ListOuterWrapper>\r\n  )\r\n};\r\n\r\nconst generatePosts = (posts) => {\r\n  return posts.map(post => (\r\n    <ListItemWrapper key={post.id}>\r\n      <Link to={`/posts/post:${post.id}`}>\r\n          <b>{post.email}</b><br/>\r\n          <code>{post.name}</code>\r\n      </Link>\r\n    </ListItemWrapper>\r\n  ))\r\n};\r\n\r\nconst mapState = (state) => {\r\n  return {\r\n    posts: state.posts\r\n  }\r\n};\r\nexport default connect(mapState)(Postlist);\r\n","import React, { useState } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { addComment } from '../Redux/Reducers/postsReducer'\r\nimport { PostWrap, CommentWrap, Time } from \"../AppStyles\";\r\nimport getTime from '../helpers/getTime'\r\n\r\nconst randomStr = require('randomstring');\r\n\r\nfunction Post({ posts, id, addComment}) {\r\n  const [userText, changeUserText] = useState('');\r\n\r\n  function handleInput(e){\r\n    changeUserText(e.target.value);\r\n  }\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n    addComment(userText, id, getTime());\r\n    changeUserText('');\r\n  }\r\n  function generateComments(comments){\r\n    return comments.map(item => (\r\n      <CommentWrap key={randomStr.generate(3)}>\r\n        <b>Comment from <i>Your Name</i>: </b>\r\n        <code>{item.body}</code>\r\n        <Time>{item.time}</Time>\r\n      </CommentWrap>\r\n    ))\r\n  }\r\n\r\n  return posts.map(post => {\r\n    if (post.id !== id) return null;\r\n    return (\r\n      <PostWrap key={post.id}>\r\n        <h3>{post.email}</h3>\r\n        <q>{post.body}</q>\r\n        {post.comments ?\r\n          generateComments(post.comments) :\r\n          null\r\n        }\r\n        <form onSubmit={onSubmit}>\r\n          <input\r\n            value={userText}\r\n            placeholder=\"Add a comment\"\r\n            onChange={handleInput}\r\n          />\r\n        </form>\r\n      </PostWrap>\r\n    )\r\n  })\r\n}\r\n\r\nconst mapState = (state) => {\r\n  return {\r\n    posts: state.posts\r\n  }\r\n};\r\n\r\nconst mapDispatch = { addComment };\r\n\r\nexport default connect(mapState, mapDispatch)(Post);\r\n","export default function getTime () {\r\n  const time = new Date();\r\n  const DD = time.getDate();\r\n  const MM = time.getMonth();\r\n  const hr = time.getHours();\r\n  const mm = time.getMinutes();\r\n  const ss = time.getSeconds();\r\n\r\n  const months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n  ];\r\n\r\n  return hr + ':' + mm + ':' + ss + ' - ' + months[MM] + ', ' +DD;\r\n};\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport Post from './Post'\r\nimport { CurrentPostOuter, CurrentPostInner, BackButton } from \"../AppStyles\";\r\n\r\nexport const PostPage = ({ match }) => {\r\n  const id = +match.params.postId.replace(/[^-0-9]/gim,'');\r\n  return (\r\n    <CurrentPostOuter>\r\n      <CurrentPostInner>\r\n        <h2>Post #{id}:</h2>\r\n        <Post id={id}/>\r\n        <BackButton>\r\n          <Link to=\"/\">Back to home</Link>\r\n        </BackButton>\r\n      </CurrentPostInner>\r\n    </CurrentPostOuter>\r\n  )\r\n};\r\n","const BASE_URL = \"https://jsonplaceholder.typicode.com/comments\";\r\n\r\nexport const loadPosts = async () => {\r\n  return await fetch(BASE_URL)\r\n    .then(response => response.json())\r\n    .catch(error => console.error('Oh no! Something went wrong: ' + error))\r\n};\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Postlist from './Components/Postlist'\nimport { PostPage } from './Components/PostPage'\nimport { loadPosts } from './helpers/loadPosts'\nimport { setPosts } from './Redux/Reducers/postsReducer'\nimport { Wrapper, GlobalStyle } from \"./AppStyles\";\n\nclass App extends React.Component {\n  async componentDidMount() {\n    const { setPosts } = this.props;\n    const posts = await loadPosts();\n    posts.length = 40;\n    setPosts(posts);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <GlobalStyle/>\n          <Wrapper>\n            <Switch>\n              <Route exact path=\"/\" component={Postlist}/>\n              <Route path=\"/posts/post:postId/\" component={PostPage}/>\n            </Switch>\n          </Wrapper>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    posts: state.posts\n  }\n};\n\nconst mapDispatch = { setPosts };\n\nexport default connect(mapState, mapDispatch)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { store } from './Redux/storage'\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename=\"/frontend-task-3\">\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}