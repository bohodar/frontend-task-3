{"version":3,"sources":["Redux/Reducers/postsReducer.js","Redux/storage.js","Components/Postlist.js","Components/Post.js","Components/PostPage.js","ApiHelper/loadPosts.js","App.js","index.js"],"names":["addCommentToPost","text","postID","console","log","type","id","reducer","combineReducers","posts","state","arguments","length","undefined","action","copy","Object","toConsumableArray","map","post","copyPost","objectSpread","copyCommets","comments","push","store","createStore","connect","_ref","react_default","a","createElement","react_router_dom","key","to","concat","name","generatePosts","mapDispatch","_useState","useState","_useState2","slicedToArray","userText","changeUserText","handleInput","e","target","value","onSubmit","preventDefault","body","item","placeholder","onChange","PostPage","match","params","postId","replace","Components_Post","loadPosts","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetch","then","response","json","catch","error","abrupt","sent","stop","apply","this","App","setPosts","props","className","react_router","exact","path","component","Postlist","React","Component","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3f65206c.chunk.js","sourcesContent":["const SET_POSTS = 'SET_POSTS';\r\nconst ADD_COMMENT = 'ADD_COMMENT';\r\n\r\nexport const setPosts = (posts) => {\r\n  return {\r\n    type: SET_POSTS,\r\n    posts: posts\r\n  }\r\n};\r\n\r\nexport const addCommentToPost = (text, postID) => {\r\n  console.log('init comms');\r\n  return {\r\n    type: ADD_COMMENT,\r\n    text: text,\r\n    id: postID\r\n  }\r\n};\r\n\r\nexport const setPostsReducer = (state = [], action) => {\r\n  console.log(action.type);\r\n  switch (action.type) {\r\n    case SET_POSTS:\r\n      return action.posts;\r\n\r\n    case ADD_COMMENT:\r\n      console.log('adding comms');\r\n      const copy = [...state];\r\n      copy.map(post => {\r\n\r\n        if (post.id === action.id) {\r\n          const copyPost = {...post};\r\n\r\n          if (copyPost['comments']) {\r\n            const copyCommets = [...copyPost.comments].push(action.text);\r\n            return {\r\n              ...copyPost,\r\n              comments: copyCommets\r\n            }\r\n          } else {\r\n            return {\r\n              ...copyPost,\r\n              comments: [action.text]\r\n            }\r\n          }\r\n        }\r\n        return post;\r\n      });\r\n      return copy;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { setPostsReducer } from './Reducers/postsReducer'\r\n\r\nconst reducer = combineReducers({\r\n  posts: setPostsReducer,\r\n});\r\n\r\nexport const store = createStore(reducer);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link} from 'react-router-dom';\r\n\r\nconst Postlist = ({ posts }) => {\r\n  return (\r\n    <div>\r\n      <h3>Postspage</h3>\r\n      {posts.length > 0 ?\r\n        <ul>{generatePosts(posts)}</ul> :\r\n        <div>Loading posts ...</div>}\r\n    </div>\r\n  )\r\n};\r\n\r\nfunction generatePosts(posts) {\r\n  return posts.map(post => (\r\n    <Link\r\n      key={post.id}\r\n      to={`/posts/post:${post.id}`}\r\n    >\r\n      <li>{post.name}</li>\r\n    </Link>\r\n  ))\r\n}\r\n\r\nconst mapState = (state) => {\r\n  return {\r\n    posts: state.posts\r\n  }\r\n};\r\nexport default connect(mapState)(Postlist);\r\n","import React, { useState } from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport { addCommentToPost } from '../Redux/Reducers/postsReducer'\r\n\r\nfunction Post({ posts, id}) {\r\n  const [userText, changeUserText] = useState('');\r\n\r\n  function handleInput(e){\r\n    changeUserText(e.target.value);\r\n  }\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n    console.log(addCommentToPost(userText, id));\r\n    addCommentToPost(userText, id);\r\n    changeUserText('');\r\n  }\r\n  function generateComments(comments){\r\n    return comments.map(item => (<p>{item}</p>))\r\n  }\r\n  console.log('render post');\r\n  return posts.map(post => {\r\n    if (post.id !== id) return null;\r\n    return (\r\n      <div key={post.id}>\r\n        <h3>{post.name}</h3>\r\n        <p>{post.body}</p>\r\n        {post['comments'] ?\r\n          generateComments(post.comments) :\r\n          null\r\n        }\r\n        <form onSubmit={onSubmit}>\r\n          <input\r\n            value={userText}\r\n            placeholder=\"Add a comment\"\r\n            onChange={handleInput}\r\n          />\r\n        </form>\r\n      </div>\r\n    )\r\n  })\r\n}\r\n\r\nconst mapState = (state) => {\r\n  return {\r\n    posts: state.posts\r\n  }\r\n};\r\n\r\nconst mapDispatch = { addCommentToPost };\r\n\r\nexport default connect(mapState, mapDispatch)(Post);\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport Post from './Post'\r\n\r\nexport const PostPage = ({ match }) => {\r\n  const id = match.params.postId.replace(/[^-0-9]/gim,'');\r\n  return (\r\n    <div>\r\n      <h2>Hello! Here's post</h2>\r\n      <Post id={+id}/>\r\n      <Link to=\"/\">Back to home</Link>\r\n    </div>\r\n  )\r\n};\r\n","const BASE_URL = \"https://jsonplaceholder.typicode.com/comments\";\r\n\r\nexport const loadPosts = async () => {\r\n  return await fetch(BASE_URL)\r\n    .then(response => response.json())\r\n    .catch(error => console.error('Oh no! Something went wrong: ' + error))\r\n};\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Postlist from './Components/Postlist'\nimport { PostPage } from './Components/PostPage'\nimport { loadPosts } from './ApiHelper/loadPosts'\nimport { setPosts } from './Redux/Reducers/postsReducer'\nimport './AppStyles';\n\nclass App extends React.Component {\n  async componentDidMount() {\n    const { setPosts } = this.props;\n    const posts = await loadPosts();\n    posts.length = 40;\n    setPosts(posts);\n  }\n\n  render() {\n    return (\n      <div className=\"PostApp\">\n        <Switch>\n          <Route exact path=\"/\" component={Postlist}/>\n          <Route path=\"/posts/post:postId/\" component={PostPage}/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    posts: state.posts\n  }\n};\n\nconst mapDispatch = { setPosts };\n\nexport default connect(mapState, mapDispatch)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { store } from './Redux/storage'\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}